var Menu = React.createClass({
    render:function () {
        return(
            <div className="right-menu">
                <div className="wrap clearfix">
                    <ul>
                        <li className="rm">
                            <a href="/task/" id="task" title="Прочитать задание">Задание<span className="icon"></span></a>
                        </li>
                        <li className="rm">
                            <a href="/all/" id="all" title="Все организации">Все<span className="icon"></span></a>
                        </li>

                        <li className="rm"  title="Добавить новую организацию">
                            <a href="/add/" id="add">Добавить<span className="icon"></span></a>
                        </li>

                    </ul>
                </div>
            </div>
        );
    }
});
ReactDOM.render(
    <Menu/>,
    document.getElementById('menu')

);
var Task = React.createClass({
    render: function () {
        return(
            <div>
                <h2>Необходимо реализовать простейший REST API сервер и клиент.</h2>
                <h3>Задача.</h3>
                <p>Реализовать работу со списком организаций. Каждая запись должна содержать следующие данные:</p>
                <ul>
                    <li>
                        <b>Тип.</b> Юридическое лицо (ЮЛ) или ИП.
                    </li>
                    <li>
                        <b>Наименование организации.</b> Обязательное к заполнению поле. Строка длиной не более 255 символов.
                        В строке не допускается одновременное использование символов латинского и кириллического алфавитов.
                    </li>
                    <li>
                        <b>ИНН.</b> Обязательное к заполнению поле. Должно содержать только цифры. Для ЮЛ 10 цифр, для ИП 12 цифр.
                    </li>
                    <li>
                        <b>КПП.</b> Для ЮЛ обязательное к заполнению поле. Для ИП не должно заполняться. Должно состоять из 9 цифр.
                    </li>
                    <li>
                        <b>Контактный телефон.</b> Обязательное к заполнению поле. Должно состоять из 10 цифр.
                    </li>
                    <li>
                        <b>Контактный e-mail.</b> Необязательное к заполнению поле. Строка длиной не более 255 символов. Должно проверяться на формат e-mail адресов.
                    </li>
                </ul>
                <p>Уникальность записей должна проверяться по совокупности двух полей: <b>ИНН, КПП</b>.</p>
                <p>Необходимо реализовать следующие операции с записями:</p>
                <ul>
                    <li>
                        <b>Просмотр</b> списка существующих записей.
                    </li>
                    <li>
                        <b>Добавление</b> новой записи.
                    </li>
                    <li>
                        <b>Редактирование</b> существующей записи.
                    </li>
                    <li>
                        <b>Удаление</b> существующей записи.
                    </li>
                </ul>

                <strong>Требования.</strong>
                <ul>
                    <li>
                        REST API сервер должен быть написан на PHP 5.4 (допускается использование фреймворка Yii2 или отсутствие фреймворков).
                    </li>
                    <li>
                        Клиент может представлять собой страницу, работающую с API через Java Script (страница не должна перезагружаться,
                        запросы к серверу только через JS) или PHP скрипт, реализующий работу с API на серверной стороне.
                    </li>
                    <li>
                        В качестве хранилища данных должна быть использована БД MySQL.
                    </li>
                    <li>
                        Указанные выше ограничения для полей должны проверяться как на стороне сервера,
                        так и на стороне клиента (при реализации клиента на PHP проверки должны осуществляться в том числе в браузере).
                    </li>
                    <li>
                        Использование Bootstrap для оформления пользовательского интерфейса клиента будет плюсом.
                    </li>
                </ul>
            </div>
        );
    }
});
ReactDOM.render(
    <Task/>,
    document.getElementById('content_data')

);